问题描述：
python3中，继承构造函数问题
<code>class a(object):
    def __init__(self):
        print("a")
class b(a):
    def __init__(self):
        super().__init__()
        print("b")
    pass
class c(a):
    def __init__(self):
        super().__init__()
        print('c')
class d(b,c):
    pass
mm = d()
</code>
结果为什么是
a
c
b 
----------------------------------------------------------------------------------------------------
修改方案：
d继承b,c。  在创建d的时候,在d的init里调用super 进到 b的init ,
在b的init里调super 又进到了 c 的init, c 的init 在进到a的init 所以出现 a c b
下面的代码可证实上面的说法:
<code> class a(object):
    def __init__(self):
        print("a")
class b(a):
    def __init__(self):
        print("b in")
        super().__init__()
        print("b out")
    pass
class c(a):
    def __init__(self):
        print('c in')
        super().__init__()
        print('c out')
class d(b,c):
    pass
mm = d()
</code>
这段代码输出:
b in
c in
a
c out
b out
----------------------------------------------------------------------------------------------------
人工打分：