在Android中制作一个chronometer计时器
我想在Android中制作一个chronometer计时器，使用了timer和sheduleAtFixedRate 方法。看起来像是在timer的run方法中调用textview后，程序就会出错停止运行。我用的是以下的代码，哪里出错了呢？
<code>Button boton_iniciar;
TextView texto_cronometro;
Timer count;
int a = 0;

public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_cronometro);

    /**********************/
    boton_iniciar = (Button) findViewById(R.id.button1);
    texto_cronometro = (TextView) findViewById(R.id.textView1);
    count= new Timer("Contador");
    boton_iniciar.setOnClickListener(new OnClickListener() {

        public void onClick(View v) {
            // TODO Auto-generated method stub
            count.scheduleAtFixedRate(new TimerTask() {         
                @Override
                public void run() {
                    // TODO Auto-generated method stub
                    a++;
                    texto_cronometro.setText(String.valueOf(a));
                }
            }, 100, 100);
        }
    });
}
</code> 
----------------------------------------------------------------------------------------------------
所有要改变UI对象的的action都应该在主UI中运行。
<code>public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_cronometro);

    /**********************/
    boton_iniciar = (Button) findViewById(R.id.button1);
    texto_cronometro = (TextView) findViewById(R.id.textView1);
    count= new Timer("Contador");
    boton_iniciar.setOnClickListener(new OnClickListener() {

        public void onClick(View v) {
            // TODO Auto-generated method stub
            count.scheduleAtFixedRate(new TimerTask() {         
                @Override
                public void run() {
                    // TODO Auto-generated method stub
                    a++;
                    ActivityCronometro.this.runOnUiThread(new Runnable() {          
                    @Override
                    public void run() {
                        texto_cronometro.setText(String.valueOf(a));

                    }
                });

                }
            }, 100, 100);
        }
    });
}
</code>